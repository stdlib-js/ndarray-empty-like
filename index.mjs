// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-ndarray-like@v0.1.0-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.1.0-esm/index.mjs";import{primitives as t}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-integer-array@v0.1.0-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.1.1-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-shape2strides@v0.1.1-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-strides2offset@v0.1.1-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-numel@v0.1.1-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-dtype@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-shape@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-order@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-ctor@esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/array-empty@v0.1.0-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/buffer-alloc-unsafe@v0.1.0-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";function v(v){var b,f,g,y,c,u,x,w;if(!e(v))throw new TypeError(h("invalid argument. First argument must be an ndarray-like object. Value: `%s`.",v));if(y={},arguments.length>1){if(!s(b=arguments[1]))throw new TypeError(h("invalid argument. Options argument must be an object. Value: `%s`.",b));if(f=r(b,"dtype")?b.dtype:m(v),r(b,"shape")){if("number"==typeof(w=b.shape)&&(w=[w]),!t(w))throw new TypeError(h("invalid option. `%s` option must be a nonnegative integer or an array of nonnegative integers. Option: `%s`.","shape",w))}else w=o(v);g=r(b,"order")?b.order:a(v),r(b,"mode")&&(y.mode=b.mode),r(b,"submode")&&(y.submode=b.submode)}else f=m(v),w=o(v),g=a(v);return w.length>0?((u=d(w))<0&&(u=0),x=n(w,g)):(u=1,x=[0]),c="binary"===f?l(u):j(u,f),new p(f,c,w,x,i(w,x),g,y)}export{v as default};
//# sourceMappingURL=index.mjs.map
